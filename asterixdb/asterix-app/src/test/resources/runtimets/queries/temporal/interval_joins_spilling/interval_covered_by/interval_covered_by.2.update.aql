/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description      :   Check temporal join functionality for interval
 * Expected Result  :   Success
 * Date             :   10th Aug, 2020
 */

use dataverse IntervalTest;

insert into dataset DataSet1
let $filler := repeat("i", 10000)
let $start := 1
let $end := 100
let $lambda := 1
let $d := 2
let $offset := 0
for $s at $srow in range($start, $end)
for $l at $lrow in range(1, $lambda)
let $id := ($srow-1) * $lambda + $lrow + $offset
return {
"id": $id,
"interval": interval(datetime-from-unix-time-in-secs($s), datetime-from-unix-time-in-secs($s + $d)),
"filler": $filler
};

use dataverse IntervalTest;

insert into dataset DataSet2
let $filler := repeat("i", 10000)
let $start := 1
let $end := 100
let $lambda := 1
let $d := 2
let $offset := 0
for $s at $srow in range($start, $end)
for $l at $lrow in range(1, $lambda)
let $id := ($srow-1) * $lambda + $lrow + $offset
return {
"id": $id,
"interval": interval(datetime-from-unix-time-in-secs($s), datetime-from-unix-time-in-secs($s + $d)),
"filler": $filler
};
