diff a/asterixdb/asterix-om/src/main/java/org/apache/asterix/om/base/temporal/ADateParserFactory.java b/asterixdb/asterix-om/src/main/java/org/apache/asterix/om/base/temporal/ADateParserFactory.java	(rejected hunks)
@@ -18,6 +18,8 @@
  */
 package org.apache.asterix.om.base.temporal;
 
+import static org.apache.asterix.om.base.temporal.GregorianCalendarSystem.CHRONON_OF_DAY;
+
 import java.io.DataOutput;
 import java.io.IOException;
 
@@ -342,4 +342,48 @@
 
         return GregorianCalendarSystem.getInstance().getChronon(year, month, day, 0, 0, 0, 0, 0);
     }
+
+    /**
+     * Parse the given string sequence as a date string, and return the days represented by the date.
+     *
+     * @param dateString
+     * @param start
+     * @param length
+     * @return
+     * @throws Exception
+     */
+    public static int parseDatePartInDays(String dateString, int start, int length) throws HyracksDataException {
+        long chronon = parseDatePart(dateString, start, length);
+        if (chronon >= 0) {
+            return (int) (chronon / CHRONON_OF_DAY);
+        } else {
+            if (chronon % CHRONON_OF_DAY != 0) {
+                return (int) (chronon / CHRONON_OF_DAY - 1);
+            } else {
+                return (int) (chronon / CHRONON_OF_DAY);
+            }
+        }
+    }
+
+    /**
+     * Parse the given string sequence as a date string, and return the days represented by the date.
+     *
+     * @param dateString
+     * @param start
+     * @param length
+     * @return
+     * @throws Exception
+     */
+    public static int parseDatePartInDays(char[] dateString, int start, int length) throws HyracksDataException {
+        long chronon = parseDatePart(dateString, start, length);
+        if (chronon >= 0) {
+            return (int) (chronon / CHRONON_OF_DAY);
+        } else {
+            if (chronon % CHRONON_OF_DAY != 0) {
+                return (int) (chronon / CHRONON_OF_DAY - 1);
+            } else {
+                return (int) (chronon / CHRONON_OF_DAY);
+            }
+        }
+    }
 }
